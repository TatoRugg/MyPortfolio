{"ast":null,"code":"/* import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchThoughts = createAsyncThunk(\n  'thoughts/fetchThoughts',\n  async () => {\n    const response = await axios.get('http://localhost:5000/thoughts');\n    return response.data;\n  }\n);\n\nexport const addThought = createAsyncThunk(\n  'thoughts/addThought',\n  async (thought) => {\n    const response = await axios.post('http://localhost:5000/thoughts', thought);\n    return response.data;\n  }\n);\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchThoughts = createAsyncThunk('thoughts/fetchThoughts', async () => {\n  const response = await axios.get('http://localhost:5000/thoughts');\n  return response.data;\n});\nexport const addThought = createAsyncThunk('thoughts/addThought', async thought => {\n  const response = await axios.post('http://localhost:5000/thoughts', thought);\n  return response.data;\n});\nexport const deleteThought = createAsyncThunk('thoughts/deleteThought', async id => {\n  await axios.delete(`http://localhost:5000/thoughts/${id}`);\n  return id;\n});\nexport const updateThought = createAsyncThunk('thoughts/updateThought', async ({\n  id,\n  text\n}) => {\n  const response = await axios.put(`http://localhost:5000/thoughts/${id}`, {\n    text\n  });\n  return response.data;\n});","map":{"version":3,"names":["createAsyncThunk","axios","fetchThoughts","response","get","data","addThought","thought","post","deleteThought","id","delete","updateThought","text","put"],"sources":["/Users/antonioruggiero/portf-2/MyPortfolio/src/actions/thoughtActions.js"],"sourcesContent":["/* import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchThoughts = createAsyncThunk(\n  'thoughts/fetchThoughts',\n  async () => {\n    const response = await axios.get('http://localhost:5000/thoughts');\n    return response.data;\n  }\n);\n\nexport const addThought = createAsyncThunk(\n  'thoughts/addThought',\n  async (thought) => {\n    const response = await axios.post('http://localhost:5000/thoughts', thought);\n    return response.data;\n  }\n);\n */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchThoughts = createAsyncThunk(\n  'thoughts/fetchThoughts',\n  async () => {\n    const response = await axios.get('http://localhost:5000/thoughts');\n    return response.data;\n  }\n);\n\nexport const addThought = createAsyncThunk(\n  'thoughts/addThought',\n  async (thought) => {\n    const response = await axios.post('http://localhost:5000/thoughts', thought);\n    return response.data;\n  }\n);\n\nexport const deleteThought = createAsyncThunk(\n  'thoughts/deleteThought',\n  async (id) => {\n    await axios.delete(`http://localhost:5000/thoughts/${id}`);\n    return id;\n  }\n);\n\nexport const updateThought = createAsyncThunk(\n  'thoughts/updateThought',\n  async ({ id, text }) => {\n    const response = await axios.put(`http://localhost:5000/thoughts/${id}`, { text });\n    return response.data;\n  }\n);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,wBAAwB,EACxB,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC;EAClE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,qBAAqB,EACrB,MAAOO,OAAO,IAAK;EACjB,MAAMJ,QAAQ,GAAG,MAAMF,KAAK,CAACO,IAAI,CAAC,gCAAgC,EAAED,OAAO,CAAC;EAC5E,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMI,aAAa,GAAGT,gBAAgB,CAC3C,wBAAwB,EACxB,MAAOU,EAAE,IAAK;EACZ,MAAMT,KAAK,CAACU,MAAM,CAAC,kCAAkCD,EAAE,EAAE,CAAC;EAC1D,OAAOA,EAAE;AACX,CACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAGZ,gBAAgB,CAC3C,wBAAwB,EACxB,OAAO;EAAEU,EAAE;EAAEG;AAAK,CAAC,KAAK;EACtB,MAAMV,QAAQ,GAAG,MAAMF,KAAK,CAACa,GAAG,CAAC,kCAAkCJ,EAAE,EAAE,EAAE;IAAEG;EAAK,CAAC,CAAC;EAClF,OAAOV,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}