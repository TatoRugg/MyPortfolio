{"ast":null,"code":"var _jsxFileName = \"/Users/antonioruggiero/Desktop/my-portfolio/src/components/ThoughtsColumn.js\",\n  _s = $RefreshSig$();\n/* import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchThoughts } from '../actions/thoughtActions';\nimport './ThoughtsColumn.css';\n\nconst ThoughtsColumn = () => {\n  const dispatch = useDispatch();\n  const thoughts = useSelector((state) => state.thoughts);\n\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [dispatch]);\n\n  // Refetch thoughts when a thought is added or removed\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [thoughts.length, dispatch]);\n\n  return (\n    <div className=\"thoughts-column\">\n      <h2>Latest Thoughts</h2>\n      {thoughts.length === 0 ? (\n        <p>No thoughts available.</p>\n      ) : (\n        thoughts.map((thought) => (\n          <div key={thought.id} className=\"thought\">\n            <p>{thought.text}</p>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtsColumn;\n\n\n */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchThoughts } from '../actions/thoughtActions';\nimport './ThoughtsColumn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThoughtsColumn = () => {\n  _s();\n  const dispatch = useDispatch();\n  const thoughts = useSelector(state => state.thoughts);\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [dispatch]);\n\n  // Refetch thoughts when the number of thoughts changes\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [thoughts.length, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thoughts-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Latest Thoughts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), thoughts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No thoughts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : thoughts.map(thought => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thought\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: thought.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)\n    }, thought.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ThoughtsColumn, \"Jmye1FDTGRCBJ7wbVhwkof7DvoE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ThoughtsColumn;\nexport default ThoughtsColumn;\nvar _c;\n$RefreshReg$(_c, \"ThoughtsColumn\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchThoughts","jsxDEV","_jsxDEV","ThoughtsColumn","_s","dispatch","thoughts","state","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","thought","text","id","_c","$RefreshReg$"],"sources":["/Users/antonioruggiero/Desktop/my-portfolio/src/components/ThoughtsColumn.js"],"sourcesContent":["/* import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchThoughts } from '../actions/thoughtActions';\nimport './ThoughtsColumn.css';\n\nconst ThoughtsColumn = () => {\n  const dispatch = useDispatch();\n  const thoughts = useSelector((state) => state.thoughts);\n\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [dispatch]);\n\n  // Refetch thoughts when a thought is added or removed\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [thoughts.length, dispatch]);\n\n  return (\n    <div className=\"thoughts-column\">\n      <h2>Latest Thoughts</h2>\n      {thoughts.length === 0 ? (\n        <p>No thoughts available.</p>\n      ) : (\n        thoughts.map((thought) => (\n          <div key={thought.id} className=\"thought\">\n            <p>{thought.text}</p>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtsColumn;\n\n\n */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchThoughts } from '../actions/thoughtActions';\nimport './ThoughtsColumn.css';\n\nconst ThoughtsColumn = () => {\n  const dispatch = useDispatch();\n  const thoughts = useSelector((state) => state.thoughts);\n\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [dispatch]);\n\n  // Refetch thoughts when the number of thoughts changes\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [thoughts.length, dispatch]);\n\n  return (\n    <div className=\"thoughts-column\">\n      <h2>Latest Thoughts</h2>\n      {thoughts.length === 0 ? (\n        <p>No thoughts available.</p>\n      ) : (\n        thoughts.map((thought) => (\n          <div key={thought.id} className=\"thought\">\n            <p>{thought.text}</p>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtsColumn;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAAC;EAEvDT,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACL,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;;EAEd;EACAR,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACL,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACM,QAAQ,CAACE,MAAM,EAAEH,QAAQ,CAAC,CAAC;EAE/B,oBACEH,OAAA;IAAKO,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BR,OAAA;MAAAQ,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBR,QAAQ,CAACE,MAAM,KAAK,CAAC,gBACpBN,OAAA;MAAAQ,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAE7BR,QAAQ,CAACS,GAAG,CAAEC,OAAO,iBACnBd,OAAA;MAAsBO,SAAS,EAAC,SAAS;MAAAC,QAAA,eACvCR,OAAA;QAAAQ,QAAA,EAAIM,OAAO,CAACC;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GADbE,OAAO,CAACE,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACN,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACV,EAAA,CA3BID,cAAc;EAAA,QACDL,WAAW,EACXC,WAAW;AAAA;AAAAoB,EAAA,GAFxBhB,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}