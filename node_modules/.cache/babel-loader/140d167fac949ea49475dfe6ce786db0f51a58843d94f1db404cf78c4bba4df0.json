{"ast":null,"code":"/* import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchThoughts } from '../actions/thoughtActions';\nimport './ThoughtsColumn.css';\n\nconst ThoughtsColumn = () => {\n  const dispatch = useDispatch();\n  const thoughts = useSelector((state) => state.thoughts);\n\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [dispatch]);\n\n  // Refetch thoughts when a thought is added or removed\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [thoughts.length, dispatch]);\n\n  return (\n    <div className=\"thoughts-column\">\n      <h2>Latest Thoughts</h2>\n      {thoughts.length === 0 ? (\n        <p>No thoughts available.</p>\n      ) : (\n        thoughts.map((thought) => (\n          <div key={thought.id} className=\"thought\">\n            <p>{thought.text}</p>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtsColumn;\n\n\n */","map":{"version":3,"names":[],"sources":["/Users/antonioruggiero/Desktop/my-portfolio/src/components/ThoughtsColumn.js"],"sourcesContent":["/* import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchThoughts } from '../actions/thoughtActions';\nimport './ThoughtsColumn.css';\n\nconst ThoughtsColumn = () => {\n  const dispatch = useDispatch();\n  const thoughts = useSelector((state) => state.thoughts);\n\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [dispatch]);\n\n  // Refetch thoughts when a thought is added or removed\n  useEffect(() => {\n    dispatch(fetchThoughts());\n  }, [thoughts.length, dispatch]);\n\n  return (\n    <div className=\"thoughts-column\">\n      <h2>Latest Thoughts</h2>\n      {thoughts.length === 0 ? (\n        <p>No thoughts available.</p>\n      ) : (\n        thoughts.map((thought) => (\n          <div key={thought.id} className=\"thought\">\n            <p>{thought.text}</p>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtsColumn;\n\n\n */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}