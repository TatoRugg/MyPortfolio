{"ast":null,"code":"/* import { createSlice } from '@reduxjs/toolkit';\nimport { fetchThoughts } from '../actions/thoughtActions';\n\nconst thoughtsSlice = createSlice({\n  name: 'thoughts',\n  initialState: [],\n  reducers: {\n    addThought: (state, action) => {\n      state.push(action.payload);\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchThoughts.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  },\n});\n\nexport const { addThought } = thoughtsSlice.actions;\n\nexport default thoughtsSlice.reducer;\n */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { fetchThoughts, addThought, deleteThought } from '../actions/thoughtActions';\nconst thoughtsSlice = createSlice({\n  name: 'thoughts',\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchThoughts.fulfilled, (state, action) => {\n      return action.payload;\n    });\n    builder.addCase(addThought.fulfilled, (state, action) => {\n      state.push(action.payload);\n    });\n    builder.addCase(deleteThought.fulfilled, (state, action) => {\n      return state.filter(thought => thought.id !== action.payload);\n    });\n  }\n});\nexport default thoughtsSlice.reducer;","map":{"version":3,"names":["createSlice","fetchThoughts","addThought","deleteThought","thoughtsSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","filter","thought","id","reducer"],"sources":["/Users/antonioruggiero/Desktop/my-portfolio/src/reducers/thoughtReducer.js"],"sourcesContent":["/* import { createSlice } from '@reduxjs/toolkit';\nimport { fetchThoughts } from '../actions/thoughtActions';\n\nconst thoughtsSlice = createSlice({\n  name: 'thoughts',\n  initialState: [],\n  reducers: {\n    addThought: (state, action) => {\n      state.push(action.payload);\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchThoughts.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  },\n});\n\nexport const { addThought } = thoughtsSlice.actions;\n\nexport default thoughtsSlice.reducer;\n */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { fetchThoughts, addThought, deleteThought } from '../actions/thoughtActions';\n\nconst thoughtsSlice = createSlice({\n  name: 'thoughts',\n  initialState: [],\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchThoughts.fulfilled, (state, action) => {\n      return action.payload;\n    });\n    builder.addCase(addThought.fulfilled, (state, action) => {\n      state.push(action.payload);\n    });\n    builder.addCase(deleteThought.fulfilled, (state, action) => {\n      return state.filter(thought => thought.id !== action.payload);\n    });\n  },\n});\n\nexport default thoughtsSlice.reducer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,QAAQ,2BAA2B;AAEpF,MAAMC,aAAa,GAAGJ,WAAW,CAAC;EAChCK,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACT,aAAa,CAACU,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1D,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACR,UAAU,CAACS,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACG,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAC5B,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACP,aAAa,CAACQ,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1D,OAAOD,KAAK,CAACI,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,EAAE,KAAKL,MAAM,CAACC,OAAO,CAAC;IAC/D,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAeV,aAAa,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}