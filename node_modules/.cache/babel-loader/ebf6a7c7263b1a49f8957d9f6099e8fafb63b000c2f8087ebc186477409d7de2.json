{"ast":null,"code":"/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo } from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext'; // Import useAuth hook\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth(); // Destructure the logout function from useAuth\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({ text: '' });\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n  };\n\n  return (\n    <div className=\"admin-page\">\n    <div className=\"header\">\n      <h1>Admin Panel</h1>\n      <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n    </div>\n\n      <div className=\"content\">\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            multiple\n            onChange={(e) => setProject({ ...project, photos: Array.from(e.target.files).map(file => URL.createObjectURL(file)) })}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => setExperience({ ...experience, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>Add Thought</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">Add Thought</button>\n        </form>\n\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"file\"\n            onChange={(e) => setSidebar({ ...sidebar, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n\n\n */","map":{"version":3,"names":[],"sources":["/Users/antonioruggiero/Desktop/my-portfolio/src/pages/AdminPage.js"],"sourcesContent":["/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo } from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext'; // Import useAuth hook\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth(); // Destructure the logout function from useAuth\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({ text: '' });\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n  };\n\n  return (\n    <div className=\"admin-page\">\n    <div className=\"header\">\n      <h1>Admin Panel</h1>\n      <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n    </div>\n\n      <div className=\"content\">\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            multiple\n            onChange={(e) => setProject({ ...project, photos: Array.from(e.target.files).map(file => URL.createObjectURL(file)) })}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => setExperience({ ...experience, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>Add Thought</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">Add Thought</button>\n        </form>\n\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"file\"\n            onChange={(e) => setSidebar({ ...sidebar, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n\n\n */\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}