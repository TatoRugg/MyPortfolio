{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchProjects = createAsyncThunk('projects/fetchProjects', async () => {\n  const response = await axios.get('http://localhost:5000/projects');\n  return response.data;\n});\nexport const addProject = createAsyncThunk('projects/addProject', async project => {\n  const response = await axios.post('http://localhost:5000/projects', project);\n  return response.data;\n});\n\n// Delete a project\nexport const deleteProject = createAsyncThunk('experiences/deleteExperience', async id => {\n  await axios.delete(`http://localhost:5000/experiences/${id}`);\n  return id;\n});\n\n/* \nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Fetch all experiences\nexport const fetchExperiences = createAsyncThunk(\n  'experiences/fetchExperiences',\n  async () => {\n    const response = await axios.get('http://localhost:5000/experiences');\n    return response.data;\n  }\n);\n\n// Add a new experience\nexport const addExperience = createAsyncThunk(\n  'experiences/addExperience',\n  async (experience) => {\n    const response = await axios.post('http://localhost:5000/experiences', experience);\n    return response.data;\n  }\n);\n\n// Delete an experience\nexport const deleteExperience = createAsyncThunk(\n  'experiences/deleteExperience',\n  async (id) => {\n    await axios.delete(`http://localhost:5000/experiences/${id}`);\n    return id;\n  }\n);\n\n// Update an existing experience\nexport const updateExperience = createAsyncThunk(\n  'experiences/updateExperience',\n  async ({ id, title, date, description, photo, link }) => {\n    const response = await axios.put(`http://localhost:5000/experiences/${id}`, {\n      title,\n      date,\n      description,\n      photo,\n      link\n    });\n    return response.data;\n  }\n);\n */","map":{"version":3,"names":["createAsyncThunk","axios","fetchProjects","response","get","data","addProject","project","post","deleteProject","id","delete"],"sources":["/Users/antonioruggiero/Desktop/my-portfolio/src/actions/projectActions.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchProjects = createAsyncThunk(\n  'projects/fetchProjects',\n  async () => {\n    const response = await axios.get('http://localhost:5000/projects');\n    return response.data;\n  }\n);\n\nexport const addProject = createAsyncThunk(\n  'projects/addProject',\n  async (project) => {\n    const response = await axios.post('http://localhost:5000/projects', project);\n    return response.data;\n  }\n);\n\n// Delete a project\nexport const deleteProject = createAsyncThunk(\n  'experiences/deleteExperience',\n  async (id) => {\n    await axios.delete(`http://localhost:5000/experiences/${id}`);\n    return id;\n  }\n);\n\n\n/* \nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// Fetch all experiences\nexport const fetchExperiences = createAsyncThunk(\n  'experiences/fetchExperiences',\n  async () => {\n    const response = await axios.get('http://localhost:5000/experiences');\n    return response.data;\n  }\n);\n\n// Add a new experience\nexport const addExperience = createAsyncThunk(\n  'experiences/addExperience',\n  async (experience) => {\n    const response = await axios.post('http://localhost:5000/experiences', experience);\n    return response.data;\n  }\n);\n\n// Delete an experience\nexport const deleteExperience = createAsyncThunk(\n  'experiences/deleteExperience',\n  async (id) => {\n    await axios.delete(`http://localhost:5000/experiences/${id}`);\n    return id;\n  }\n);\n\n// Update an existing experience\nexport const updateExperience = createAsyncThunk(\n  'experiences/updateExperience',\n  async ({ id, title, date, description, photo, link }) => {\n    const response = await axios.put(`http://localhost:5000/experiences/${id}`, {\n      title,\n      date,\n      description,\n      photo,\n      link\n    });\n    return response.data;\n  }\n);\n */"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAC3C,wBAAwB,EACxB,YAAY;EACV,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC;EAClE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACxC,qBAAqB,EACrB,MAAOO,OAAO,IAAK;EACjB,MAAMJ,QAAQ,GAAG,MAAMF,KAAK,CAACO,IAAI,CAAC,gCAAgC,EAAED,OAAO,CAAC;EAC5E,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CACF,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAGT,gBAAgB,CAC3C,8BAA8B,EAC9B,MAAOU,EAAE,IAAK;EACZ,MAAMT,KAAK,CAACU,MAAM,CAAC,qCAAqCD,EAAE,EAAE,CAAC;EAC7D,OAAOA,EAAE;AACX,CACF,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}