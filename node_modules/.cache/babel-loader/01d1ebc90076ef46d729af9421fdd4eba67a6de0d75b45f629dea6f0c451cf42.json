{"ast":null,"code":"var _jsxFileName = \"/Users/antonioruggiero/Desktop/my-portfolio/src/pages/AdminPage.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools} from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext'; // Import useAuth hook\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth(); // Destructure the logout function from useAuth\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n  const [tool, setTool] = useState({ name: '', logoUrl: '' });\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({ text: '' });\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n  };\n\n\n  const handleToolSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools())); // Dispatch the action to add a tool\n    setTool({ name: '', logoUrl: '' });\n  };\n\n  return (\n    <div className=\"admin-page\">\n    <div className=\"header\">\n      <h1>Admin Panel</h1>\n      <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n    </div>\n\n      <div className=\"content\">\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            multiple\n            onChange={(e) => setProject({ ...project, photos: Array.from(e.target.files).map(file => URL.createObjectURL(file)) })}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => setExperience({ ...experience, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>Add Thought</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">Add Thought</button>\n        </form>\n\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"file\"\n            onChange={(e) => setSidebar({ ...sidebar, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n\n        <form onSubmit={handleToolSubmit}>\n          <h2>Add Tool</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Tool Name\"\n            value={tool.name}\n            onChange={(e) => setTool({ ...tool, name: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Tool Logo URL\"\n            value={tool.logoUrl}\n            onChange={(e) => setTool({ ...tool, logoUrl: e.target.value })}\n          />\n          <button type=\"submit\">Add Tool</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n\n\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts, deleteThought, updateThought } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools } from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext';\nimport './AdminPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    logout\n  } = useAuth();\n  const thoughts = useSelector(state => state.thoughts);\n  const sidebarInfo = useSelector(state => state.sidebar.sidebarInfo);\n  const [project, setProject] = useState({\n    title: '',\n    description: '',\n    photos: [],\n    link: ''\n  });\n  const [experience, setExperience] = useState({\n    description: '',\n    photo: '',\n    link: ''\n  });\n  const [thought, setThought] = useState({\n    text: ''\n  });\n  const [editingThought, setEditingThought] = useState(null); // State for the thought being edited\n  const [sidebar, setSidebar] = useState({\n    fullName: '',\n    currentPosition: '',\n    description: '',\n    photo: ''\n  });\n  const [tool, setTool] = useState({\n    name: '',\n    logoUrl: ''\n  });\n  const [imageInput, setImageInput] = useState('');\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n  const handleProjectSubmit = e => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({\n      title: '',\n      description: '',\n      photos: [],\n      link: ''\n    });\n    setImageInput('');\n  };\n  const handleExperienceSubmit = e => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({\n      description: '',\n      photo: '',\n      link: ''\n    });\n    setImageInput('');\n  };\n  const handleThoughtSubmit = e => {\n    if (e) {\n      e.preventDefault();\n    }\n    if (editingThought) {\n      // If editing, update the thought\n      dispatch(updateThought({\n        id: editingThought.id,\n        text: thought.text\n      })).then(() => {\n        setEditingThought(null);\n        setThought({\n          text: ''\n        });\n        dispatch(fetchThoughts()); // Refetch thoughts after update\n      });\n    } else {\n      // If not editing, add a new thought\n      dispatch(addThought(thought)).then(() => {\n        setThought({\n          text: ''\n        });\n        dispatch(fetchThoughts());\n      });\n    }\n  };\n  const handleEdit = thought => {\n    setEditingThought(thought);\n    setThought({\n      text: thought.text\n    });\n  };\n  const handleCancelEdit = () => {\n    setEditingThought(null);\n    setThought({\n      text: ''\n    });\n  };\n  const handleThoughtChange = (e, id) => {\n    // Update the specific thought being edited\n    if (editingThought && editingThought.id === id) {\n      setThought({\n        text: e.target.value\n      });\n    }\n  };\n  const handleDelete = id => {\n    dispatch(deleteThought(id)).then(() => dispatch(fetchThoughts()));\n  };\n  const handleSidebarSubmit = e => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n    setImageInput('');\n  };\n  const handleToolSubmit = e => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools()));\n    setTool({\n      name: '',\n      logoUrl: ''\n    });\n  };\n  const handleImageInputChange = (e, setFunction, stateField) => {\n    const value = e.target.value;\n    setImageInput(value);\n    if (value.startsWith('http://') || value.startsWith('https://')) {\n      setFunction(prev => ({\n        ...prev,\n        [stateField]: [value]\n      })); // Treat as URL\n    } else if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFunction(prev => ({\n          ...prev,\n          [stateField]: [reader.result] // Store as base64 URL\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: logout,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleProjectSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Project Title\",\n          value: project.title,\n          onChange: e => setProject({\n            ...project,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Project Description\",\n          value: project.description,\n          onChange: e => setProject({\n            ...project,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Project Link\",\n          value: project.link,\n          onChange: e => setProject({\n            ...project,\n            link: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Project Image URL or select a file\",\n          value: imageInput,\n          onChange: e => handleImageInputChange(e, setProject, 'photos'),\n          onClick: () => setImageInput('') // Clear when the user clicks to enter a new value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImageInputChange(e, setProject, 'photos')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleExperienceSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Experience Description\",\n          value: experience.description,\n          onChange: e => setExperience({\n            ...experience,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Experience Link\",\n          value: experience.link,\n          onChange: e => setExperience({\n            ...experience,\n            link: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Experience Image URL or select a file\",\n          value: imageInput,\n          onChange: e => handleImageInputChange(e, setExperience, 'photo'),\n          onClick: () => setImageInput('') // Clear when the user clicks to enter a new value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImageInputChange(e, setExperience, 'photo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleThoughtSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editingThought ? 'Edit Thought' : 'Add Thought'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Your Thought\",\n          value: thought.text,\n          onChange: e => setThought({\n            ...thought,\n            text: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editingThought ? 'Update Thought' : 'Add Thought'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), editingThought && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancelEdit,\n          type: \"button\",\n          children: \"Cancel Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Thoughts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thoughts-table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"thoughts-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Thought\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: thoughts.map(thought => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingThought && editingThought.id === thought.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: thought.text,\n                  onChange: e => handleThoughtChange(e, thought.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 23\n                }, this) : thought.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingThought && editingThought.id === thought.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleThoughtSubmit,\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleCancelEdit,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleEdit(thought),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDelete(thought.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this)]\n            }, thought.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSidebarSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Sidebar Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Full Name\",\n          value: sidebar.fullName,\n          onChange: e => setSidebar({\n            ...sidebar,\n            fullName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Current Position\",\n          value: sidebar.currentPosition,\n          onChange: e => setSidebar({\n            ...sidebar,\n            currentPosition: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description\",\n          value: sidebar.description,\n          onChange: e => setSidebar({\n            ...sidebar,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Sidebar Image URL or Upload File\",\n          value: imageInput,\n          onChange: e => handleImageInputChange(e, setSidebar, 'photo'),\n          onClick: () => setImageInput('') // Clear when the user clicks to enter a new value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImageInputChange(e, setSidebar, 'photo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleToolSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tool Name\",\n          value: tool.name,\n          onChange: e => setTool({\n            ...tool,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tool Logo URL\",\n          value: tool.logoUrl,\n          onChange: e => setTool({\n            ...tool,\n            logoUrl: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"C0+BjbMkDDWmL3/ZsTaYEuGzrkk=\", false, function () {\n  return [useDispatch, useAuth, useSelector, useSelector];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","addProject","fetchProjects","addExperience","fetchExperiences","addThought","fetchThoughts","deleteThought","updateThought","fetchSidebarInfo","updateSidebarInfo","addTool","fetchTools","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPage","_s","dispatch","logout","thoughts","state","sidebarInfo","sidebar","project","setProject","title","description","photos","link","experience","setExperience","photo","thought","setThought","text","editingThought","setEditingThought","setSidebar","fullName","currentPosition","tool","setTool","name","logoUrl","imageInput","setImageInput","handleProjectSubmit","e","preventDefault","then","handleExperienceSubmit","handleThoughtSubmit","id","handleEdit","handleCancelEdit","handleThoughtChange","target","value","handleDelete","handleSidebarSubmit","handleToolSubmit","handleImageInputChange","setFunction","stateField","startsWith","prev","files","file","reader","FileReader","onloadend","result","readAsDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","map","_c","$RefreshReg$"],"sources":["/Users/antonioruggiero/Desktop/my-portfolio/src/pages/AdminPage.js"],"sourcesContent":["/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools} from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext'; // Import useAuth hook\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth(); // Destructure the logout function from useAuth\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n  const [tool, setTool] = useState({ name: '', logoUrl: '' });\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({ text: '' });\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n  };\n\n\n  const handleToolSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools())); // Dispatch the action to add a tool\n    setTool({ name: '', logoUrl: '' });\n  };\n\n  return (\n    <div className=\"admin-page\">\n    <div className=\"header\">\n      <h1>Admin Panel</h1>\n      <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n    </div>\n\n      <div className=\"content\">\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            multiple\n            onChange={(e) => setProject({ ...project, photos: Array.from(e.target.files).map(file => URL.createObjectURL(file)) })}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => setExperience({ ...experience, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>Add Thought</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">Add Thought</button>\n        </form>\n\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"file\"\n            onChange={(e) => setSidebar({ ...sidebar, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n\n        <form onSubmit={handleToolSubmit}>\n          <h2>Add Tool</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Tool Name\"\n            value={tool.name}\n            onChange={(e) => setTool({ ...tool, name: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Tool Logo URL\"\n            value={tool.logoUrl}\n            onChange={(e) => setTool({ ...tool, logoUrl: e.target.value })}\n          />\n          <button type=\"submit\">Add Tool</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n\n\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts, deleteThought, updateThought } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools } from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext';\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth();\n  const thoughts = useSelector((state) => state.thoughts);\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [editingThought, setEditingThought] = useState(null); // State for the thought being edited\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n  const [tool, setTool] = useState({ name: '', logoUrl: '' });\n  const [imageInput, setImageInput] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n    setImageInput('');\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n    setImageInput('');\n  };\n\n  const handleThoughtSubmit = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    if (editingThought) {\n      // If editing, update the thought\n      dispatch(updateThought({ id: editingThought.id, text: thought.text })).then(() => {\n        setEditingThought(null);\n        setThought({ text: '' });\n        dispatch(fetchThoughts()); // Refetch thoughts after update\n      });\n    } else {\n      // If not editing, add a new thought\n      dispatch(addThought(thought)).then(() => {\n        setThought({ text: '' });\n        dispatch(fetchThoughts());\n      });\n    }\n  };\n\n  const handleEdit = (thought) => {\n    setEditingThought(thought);\n    setThought({ text: thought.text });\n  };\n\n  const handleCancelEdit = () => {\n    setEditingThought(null);\n    setThought({ text: '' });\n  };\n\n  const handleThoughtChange = (e, id) => {\n    // Update the specific thought being edited\n    if (editingThought && editingThought.id === id) {\n      setThought({ text: e.target.value });\n    }\n  };\n\n  const handleDelete = (id) => {\n    dispatch(deleteThought(id)).then(() => dispatch(fetchThoughts()));\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n    setImageInput('');\n  };\n\n  const handleToolSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools()));\n    setTool({ name: '', logoUrl: '' });\n  };\n\n  const handleImageInputChange = (e, setFunction, stateField) => {\n    const value = e.target.value;\n    setImageInput(value);\n\n    if (value.startsWith('http://') || value.startsWith('https://')) {\n      setFunction(prev => ({ ...prev, [stateField]: [value] })); // Treat as URL\n    } else if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFunction(prev => ({\n          ...prev,\n          [stateField]: [reader.result], // Store as base64 URL\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <div className=\"header\">\n        <h1>Admin Panel</h1>\n        <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n      </div>\n\n      <div className=\"content\">\n        {/* Project Form */}\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Project Image URL or select a file\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setProject, 'photos')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setProject, 'photos')}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        {/* Experience Form */}\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Experience Image URL or select a file\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setExperience, 'photo')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setExperience, 'photo')}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        {/* Thought Form */}\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>{editingThought ? 'Edit Thought' : 'Add Thought'}</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">{editingThought ? 'Update Thought' : 'Add Thought'}</button>\n          {editingThought && (\n            <button onClick={handleCancelEdit} type=\"button\">\n              Cancel Edit\n            </button>\n          )}\n        </form>\n\n        {/* Thoughts Management Table */}\n        <h2>Manage Thoughts</h2>\n        <div className=\"thoughts-table-container\">\n          <table className=\"thoughts-table\">\n            <thead>\n              <tr>\n                <th>Thought</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {thoughts.map((thought) => (\n                <tr key={thought.id}>\n                  <td>\n                    {editingThought && editingThought.id === thought.id ? (\n                      <input\n                        type=\"text\"\n                        value={thought.text}\n                        onChange={(e) => handleThoughtChange(e, thought.id)}\n                      />\n                    ) : (\n                      thought.text\n                    )}\n                  </td>\n                  <td>\n                    {editingThought && editingThought.id === thought.id ? (\n                      <>\n                        <button onClick={handleThoughtSubmit}>Save</button>\n                        <button onClick={handleCancelEdit}>Cancel</button>\n                      </>\n                    ) : (\n                      <>\n                        <button onClick={() => handleEdit(thought)}>Edit</button>\n                        <button onClick={() => handleDelete(thought.id)}>Delete</button>\n                      </>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Sidebar Info Form */}\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Sidebar Image URL or Upload File\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setSidebar, 'photo')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setSidebar, 'photo')}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n\n        {/* Tool Form */}\n        <form onSubmit={handleToolSubmit}>\n          <h2>Add Tool</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Tool Name\"\n            value={tool.name}\n            onChange={(e) => setTool({ ...tool, name: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Tool Logo URL\"\n            value={tool.logoUrl}\n            onChange={(e) => setTool({ ...tool, logoUrl: e.target.value })}\n          />\n          <button type=\"submit\">Add Tool</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,aAAa,QAAQ,2BAA2B;AACrE,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,8BAA8B;AAC9E,SAASC,UAAU,EAAEC,aAAa,EAAEC,aAAa,EAAEC,aAAa,QAAQ,2BAA2B;AACnG,SAASC,gBAAgB,EAAEC,iBAAiB,EAAEC,OAAO,EAAEC,UAAU,QAAQ,2BAA2B;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}