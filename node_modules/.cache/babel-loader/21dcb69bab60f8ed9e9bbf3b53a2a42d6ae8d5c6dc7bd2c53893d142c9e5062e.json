{"ast":null,"code":"var _jsxFileName = \"/Users/antonioruggiero/Desktop/my-portfolio/src/pages/AdminPage.js\",\n  _s = $RefreshSig$();\n/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools} from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext'; // Import useAuth hook\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth(); // Destructure the logout function from useAuth\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n  const [tool, setTool] = useState({ name: '', logoUrl: '' });\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({ text: '' });\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n  };\n\n\n  const handleToolSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools())); // Dispatch the action to add a tool\n    setTool({ name: '', logoUrl: '' });\n  };\n\n  return (\n    <div className=\"admin-page\">\n    <div className=\"header\">\n      <h1>Admin Panel</h1>\n      <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n    </div>\n\n      <div className=\"content\">\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            multiple\n            onChange={(e) => setProject({ ...project, photos: Array.from(e.target.files).map(file => URL.createObjectURL(file)) })}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => setExperience({ ...experience, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>Add Thought</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">Add Thought</button>\n        </form>\n\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"file\"\n            onChange={(e) => setSidebar({ ...sidebar, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n\n        <form onSubmit={handleToolSubmit}>\n          <h2>Add Tool</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Tool Name\"\n            value={tool.name}\n            onChange={(e) => setTool({ ...tool, name: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Tool Logo URL\"\n            value={tool.logoUrl}\n            onChange={(e) => setTool({ ...tool, logoUrl: e.target.value })}\n          />\n          <button type=\"submit\">Add Tool</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n\n\n */\n\n/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools} from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext';\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth();\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n  const [tool, setTool] = useState({ name: '', logoUrl: '' });\n  const [imageInput, setImageInput] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n    setImageInput('');\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n    setImageInput('');\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({ text: '' });\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n    setImageInput('');\n  };\n\n  const handleToolSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools()));\n    setTool({ name: '', logoUrl: '' });\n  };\n\n  const handleImageInputChange = (e, setFunction, stateField) => {\n    const value = e.target.value;\n    setImageInput(value);\n\n    if (value.startsWith('http://') || value.startsWith('https://')) {\n      setFunction(prev => ({ ...prev, [stateField]: [value] })); // Treat as URL\n    } else if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFunction(prev => ({\n          ...prev,\n          [stateField]: [reader.result], // Store as base64 URL\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <div className=\"header\">\n        <h1>Admin Panel</h1>\n        <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n      </div>\n\n      <div className=\"content\">\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Project Image URL or select a file\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setProject, 'photos')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setProject, 'photos')}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Experience Image URL or select a file\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setExperience, 'photo')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setExperience, 'photo')}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>Add Thought</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">Add Thought</button>\n        </form>\n\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Sidebar Image URL or Upload File\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setSidebar, 'photo')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setSidebar, 'photo')}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n\n        <form onSubmit={handleToolSubmit}>\n          <h2>Add Tool</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Tool Name\"\n            value={tool.name}\n            onChange={(e) => setTool({ ...tool, name: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Tool Logo URL\"\n            value={tool.logoUrl}\n            onChange={(e) => setTool({ ...tool, logoUrl: e.target.value })}\n          />\n          <button type=\"submit\">Add Tool</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts, deleteThought } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools } from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext';\nimport './AdminPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    logout\n  } = useAuth();\n  const thoughts = useSelector(state => state.thoughts);\n  const sidebarInfo = useSelector(state => state.sidebar.sidebarInfo);\n  const [project, setProject] = useState({\n    title: '',\n    description: '',\n    photos: [],\n    link: ''\n  });\n  const [experience, setExperience] = useState({\n    description: '',\n    photo: '',\n    link: ''\n  });\n  const [thought, setThought] = useState({\n    text: ''\n  });\n  const [sidebar, setSidebar] = useState({\n    fullName: '',\n    currentPosition: '',\n    description: '',\n    photo: ''\n  });\n  const [tool, setTool] = useState({\n    name: '',\n    logoUrl: ''\n  });\n  const [imageInput, setImageInput] = useState('');\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n  const handleProjectSubmit = e => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({\n      title: '',\n      description: '',\n      photos: [],\n      link: ''\n    });\n    setImageInput('');\n  };\n  const handleExperienceSubmit = e => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({\n      description: '',\n      photo: '',\n      link: ''\n    });\n    setImageInput('');\n  };\n  const handleThoughtSubmit = e => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({\n      text: ''\n    });\n  };\n  const handleDelete = id => {\n    dispatch(deleteThought(id)).then(() => dispatch(fetchThoughts()));\n  };\n  const handleSidebarSubmit = e => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n    setImageInput('');\n  };\n  const handleToolSubmit = e => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools()));\n    setTool({\n      name: '',\n      logoUrl: ''\n    });\n  };\n  const handleImageInputChange = (e, setFunction, stateField) => {\n    const value = e.target.value;\n    setImageInput(value);\n    if (value.startsWith('http://') || value.startsWith('https://')) {\n      setFunction(prev => ({\n        ...prev,\n        [stateField]: [value]\n      })); // Treat as URL\n    } else if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFunction(prev => ({\n          ...prev,\n          [stateField]: [reader.result] // Store as base64 URL\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: logout,\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleProjectSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Project Title\",\n          value: project.title,\n          onChange: e => setProject({\n            ...project,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Project Description\",\n          value: project.description,\n          onChange: e => setProject({\n            ...project,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Project Link\",\n          value: project.link,\n          onChange: e => setProject({\n            ...project,\n            link: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Project Image URL or select a file\",\n          value: imageInput,\n          onChange: e => handleImageInputChange(e, setProject, 'photos'),\n          onClick: () => setImageInput('') // Clear when the user clicks to enter a new value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImageInputChange(e, setProject, 'photos')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleExperienceSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Experience Description\",\n          value: experience.description,\n          onChange: e => setExperience({\n            ...experience,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Experience Link\",\n          value: experience.link,\n          onChange: e => setExperience({\n            ...experience,\n            link: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Experience Image URL or select a file\",\n          value: imageInput,\n          onChange: e => handleImageInputChange(e, setExperience, 'photo'),\n          onClick: () => setImageInput('') // Clear when the user clicks to enter a new value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImageInputChange(e, setExperience, 'photo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleThoughtSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Your Thought\",\n          value: thought.text,\n          onChange: e => setThought({\n            ...thought,\n            text: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Thoughts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), thoughts.map(thought => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thought-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: thought.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(thought.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this)]\n      }, thought.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSidebarSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Sidebar Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Full Name\",\n          value: sidebar.fullName,\n          onChange: e => setSidebar({\n            ...sidebar,\n            fullName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Current Position\",\n          value: sidebar.currentPosition,\n          onChange: e => setSidebar({\n            ...sidebar,\n            currentPosition: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description\",\n          value: sidebar.description,\n          onChange: e => setSidebar({\n            ...sidebar,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Sidebar Image URL or Upload File\",\n          value: imageInput,\n          onChange: e => handleImageInputChange(e, setSidebar, 'photo'),\n          onClick: () => setImageInput('') // Clear when the user clicks to enter a new value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleImageInputChange(e, setSidebar, 'photo')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Sidebar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleToolSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tool Name\",\n          value: tool.name,\n          onChange: e => setTool({\n            ...tool,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tool Logo URL\",\n          value: tool.logoUrl,\n          onChange: e => setTool({\n            ...tool,\n            logoUrl: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 495,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"1ue3+A64YO6dMclxSgQdX3bsBpE=\", false, function () {\n  return [useDispatch, useAuth, useSelector, useSelector];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","addProject","fetchProjects","addExperience","fetchExperiences","addThought","fetchThoughts","deleteThought","fetchSidebarInfo","updateSidebarInfo","addTool","fetchTools","useAuth","jsxDEV","_jsxDEV","AdminPage","_s","dispatch","logout","thoughts","state","sidebarInfo","sidebar","project","setProject","title","description","photos","link","experience","setExperience","photo","thought","setThought","text","setSidebar","fullName","currentPosition","tool","setTool","name","logoUrl","imageInput","setImageInput","handleProjectSubmit","e","preventDefault","then","handleExperienceSubmit","handleThoughtSubmit","handleDelete","id","handleSidebarSubmit","handleToolSubmit","handleImageInputChange","setFunction","stateField","value","target","startsWith","prev","files","file","reader","FileReader","onloadend","result","readAsDataURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","map","_c","$RefreshReg$"],"sources":["/Users/antonioruggiero/Desktop/my-portfolio/src/pages/AdminPage.js"],"sourcesContent":["/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools} from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext'; // Import useAuth hook\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth(); // Destructure the logout function from useAuth\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n  const [tool, setTool] = useState({ name: '', logoUrl: '' });\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({ text: '' });\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n  };\n\n\n  const handleToolSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools())); // Dispatch the action to add a tool\n    setTool({ name: '', logoUrl: '' });\n  };\n\n  return (\n    <div className=\"admin-page\">\n    <div className=\"header\">\n      <h1>Admin Panel</h1>\n      <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n    </div>\n\n      <div className=\"content\">\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            multiple\n            onChange={(e) => setProject({ ...project, photos: Array.from(e.target.files).map(file => URL.createObjectURL(file)) })}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => setExperience({ ...experience, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>Add Thought</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">Add Thought</button>\n        </form>\n\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"file\"\n            onChange={(e) => setSidebar({ ...sidebar, photo: URL.createObjectURL(e.target.files[0]) })}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n\n        <form onSubmit={handleToolSubmit}>\n          <h2>Add Tool</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Tool Name\"\n            value={tool.name}\n            onChange={(e) => setTool({ ...tool, name: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Tool Logo URL\"\n            value={tool.logoUrl}\n            onChange={(e) => setTool({ ...tool, logoUrl: e.target.value })}\n          />\n          <button type=\"submit\">Add Tool</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n\n\n */\n\n/* import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools} from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext';\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth();\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n  const [tool, setTool] = useState({ name: '', logoUrl: '' });\n  const [imageInput, setImageInput] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n    setImageInput('');\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n    setImageInput('');\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({ text: '' });\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n    setImageInput('');\n  };\n\n  const handleToolSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools()));\n    setTool({ name: '', logoUrl: '' });\n  };\n\n  const handleImageInputChange = (e, setFunction, stateField) => {\n    const value = e.target.value;\n    setImageInput(value);\n\n    if (value.startsWith('http://') || value.startsWith('https://')) {\n      setFunction(prev => ({ ...prev, [stateField]: [value] })); // Treat as URL\n    } else if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFunction(prev => ({\n          ...prev,\n          [stateField]: [reader.result], // Store as base64 URL\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <div className=\"header\">\n        <h1>Admin Panel</h1>\n        <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n      </div>\n\n      <div className=\"content\">\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Project Image URL or select a file\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setProject, 'photos')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setProject, 'photos')}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Experience Image URL or select a file\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setExperience, 'photo')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setExperience, 'photo')}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>Add Thought</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">Add Thought</button>\n        </form>\n\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Sidebar Image URL or Upload File\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setSidebar, 'photo')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setSidebar, 'photo')}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n\n        <form onSubmit={handleToolSubmit}>\n          <h2>Add Tool</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Tool Name\"\n            value={tool.name}\n            onChange={(e) => setTool({ ...tool, name: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Tool Logo URL\"\n            value={tool.logoUrl}\n            onChange={(e) => setTool({ ...tool, logoUrl: e.target.value })}\n          />\n          <button type=\"submit\">Add Tool</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProject, fetchProjects } from '../actions/projectActions';\nimport { addExperience, fetchExperiences } from '../actions/experienceActions';\nimport { addThought, fetchThoughts, deleteThought } from '../actions/thoughtActions';\nimport { fetchSidebarInfo, updateSidebarInfo, addTool, fetchTools } from '../actions/SidebarActions';\nimport { useAuth } from '../context/AuthContext';\nimport './AdminPage.css';\n\nconst AdminPage = () => {\n  const dispatch = useDispatch();\n  const { logout } = useAuth();\n  const thoughts = useSelector((state) => state.thoughts);\n  const sidebarInfo = useSelector((state) => state.sidebar.sidebarInfo);\n\n  const [project, setProject] = useState({ title: '', description: '', photos: [], link: '' });\n  const [experience, setExperience] = useState({ description: '', photo: '', link: '' });\n  const [thought, setThought] = useState({ text: '' });\n  const [sidebar, setSidebar] = useState({ fullName: '', currentPosition: '', description: '', photo: '' });\n  const [tool, setTool] = useState({ name: '', logoUrl: '' });\n  const [imageInput, setImageInput] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchProjects());\n    dispatch(fetchExperiences());\n    dispatch(fetchThoughts());\n    dispatch(fetchSidebarInfo());\n    dispatch(fetchTools());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sidebarInfo) {\n      setSidebar(sidebarInfo);\n    }\n  }, [sidebarInfo]);\n\n  const handleProjectSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addProject(project)).then(() => dispatch(fetchProjects()));\n    setProject({ title: '', description: '', photos: [], link: '' });\n    setImageInput('');\n  };\n\n  const handleExperienceSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExperience(experience)).then(() => dispatch(fetchExperiences()));\n    setExperience({ description: '', photo: '', link: '' });\n    setImageInput('');\n  };\n\n  const handleThoughtSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addThought(thought)).then(() => dispatch(fetchThoughts()));\n    setThought({ text: '' });\n  };\n\n  const handleDelete = (id) => {\n    dispatch(deleteThought(id)).then(() => dispatch(fetchThoughts()));\n  };\n\n  const handleSidebarSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateSidebarInfo(sidebar));\n    setImageInput('');\n  };\n\n  const handleToolSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTool(tool)).then(() => dispatch(fetchTools()));\n    setTool({ name: '', logoUrl: '' });\n  };\n\n  const handleImageInputChange = (e, setFunction, stateField) => {\n    const value = e.target.value;\n    setImageInput(value);\n\n    if (value.startsWith('http://') || value.startsWith('https://')) {\n      setFunction(prev => ({ ...prev, [stateField]: [value] })); // Treat as URL\n    } else if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFunction(prev => ({\n          ...prev,\n          [stateField]: [reader.result], // Store as base64 URL\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div className=\"admin-page\">\n      <div className=\"header\">\n        <h1>Admin Panel</h1>\n        <button className=\"logout-button\" onClick={logout}>Sign Out</button>\n      </div>\n\n      <div className=\"content\">\n        {/* Project Form */}\n        <form onSubmit={handleProjectSubmit}>\n          <h2>Add Project</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Project Title\"\n            value={project.title}\n            onChange={(e) => setProject({ ...project, title: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Project Description\"\n            value={project.description}\n            onChange={(e) => setProject({ ...project, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Project Link\"\n            value={project.link}\n            onChange={(e) => setProject({ ...project, link: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Project Image URL or select a file\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setProject, 'photos')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setProject, 'photos')}\n          />\n          <button type=\"submit\">Add Project</button>\n        </form>\n\n        {/* Experience Form */}\n        <form onSubmit={handleExperienceSubmit}>\n          <h2>Add Experience</h2>\n          <textarea\n            placeholder=\"Experience Description\"\n            value={experience.description}\n            onChange={(e) => setExperience({ ...experience, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Experience Link\"\n            value={experience.link}\n            onChange={(e) => setExperience({ ...experience, link: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Experience Image URL or select a file\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setExperience, 'photo')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setExperience, 'photo')}\n          />\n          <button type=\"submit\">Add Experience</button>\n        </form>\n\n        {/* Thought Form */}\n        <form onSubmit={handleThoughtSubmit}>\n          <h2>Add Thought</h2>\n          <textarea\n            placeholder=\"Your Thought\"\n            value={thought.text}\n            onChange={(e) => setThought({ ...thought, text: e.target.value })}\n          ></textarea>\n          <button type=\"submit\">Add Thought</button>\n        </form>\n\n        {/* Thoughts Management */}\n        <h2>Manage Thoughts</h2>\n        {thoughts.map((thought) => (\n          <div key={thought.id} className=\"thought-item\">\n            <p>{thought.text}</p>\n            <button onClick={() => handleDelete(thought.id)}>Delete</button>\n          </div>\n        ))}\n\n        {/* Sidebar Info Form */}\n        <form onSubmit={handleSidebarSubmit}>\n          <h2>Edit Sidebar Info</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Full Name\"\n            value={sidebar.fullName}\n            onChange={(e) => setSidebar({ ...sidebar, fullName: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Current Position\"\n            value={sidebar.currentPosition}\n            onChange={(e) => setSidebar({ ...sidebar, currentPosition: e.target.value })}\n          />\n          <textarea\n            placeholder=\"Description\"\n            value={sidebar.description}\n            onChange={(e) => setSidebar({ ...sidebar, description: e.target.value })}\n          ></textarea>\n          <input\n            type=\"text\"\n            placeholder=\"Sidebar Image URL or Upload File\"\n            value={imageInput}\n            onChange={(e) => handleImageInputChange(e, setSidebar, 'photo')}\n            onClick={() => setImageInput('')} // Clear when the user clicks to enter a new value\n          />\n          <input\n            type=\"file\"\n            onChange={(e) => handleImageInputChange(e, setSidebar, 'photo')}\n          />\n          <button type=\"submit\">Update Sidebar</button>\n        </form>\n\n        {/* Tool Form */}\n        <form onSubmit={handleToolSubmit}>\n          <h2>Add Tool</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Tool Name\"\n            value={tool.name}\n            onChange={(e) => setTool({ ...tool, name: e.target.value })}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Tool Logo URL\"\n            value={tool.logoUrl}\n            onChange={(e) => setTool({ ...tool, logoUrl: e.target.value })}\n          />\n          <button type=\"submit\">Add Tool</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}