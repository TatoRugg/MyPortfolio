{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchExperiences } from '../actions/experienceActions';\nconst experienceSlice = createSlice({\n  name: 'experiences',\n  initialState: [],\n  reducers: {\n    setExperiences: (state, action) => action.payload,\n    addExperience: (state, action) => {\n      state.push(action.payload);\n    }\n  },\n  extraReducers: {\n    [fetchExperiences.fulfilled]: (state, action) => action.payload\n  }\n});\nexport const {\n  setExperiences,\n  addExperience\n} = experienceSlice.actions;\nexport default experienceSlice.reducer;","map":{"version":3,"names":["createSlice","fetchExperiences","experienceSlice","name","initialState","reducers","setExperiences","state","action","payload","addExperience","push","extraReducers","fulfilled","actions","reducer"],"sources":["/Users/antonioruggiero/my-portfolio/src/reducers/experienceReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { fetchExperiences } from '../actions/experienceActions';\n\nconst experienceSlice = createSlice({\n  name: 'experiences',\n  initialState: [],\n  reducers: {\n    setExperiences: (state, action) => action.payload,\n    addExperience: (state, action) => {\n      state.push(action.payload);\n    },\n  },\n  extraReducers: {\n    [fetchExperiences.fulfilled]: (state, action) => action.payload,\n  },\n});\n\nexport const { setExperiences, addExperience } = experienceSlice.actions;\n\nexport default experienceSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,8BAA8B;AAE/D,MAAMC,eAAe,GAAGF,WAAW,CAAC;EAClCG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACC,OAAO;IACjDC,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACI,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC5B;EACF,CAAC;EACDG,aAAa,EAAE;IACb,CAACX,gBAAgB,CAACY,SAAS,GAAG,CAACN,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACC;EAC1D;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,cAAc;EAAEI;AAAc,CAAC,GAAGR,eAAe,CAACY,OAAO;AAExE,eAAeZ,eAAe,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}