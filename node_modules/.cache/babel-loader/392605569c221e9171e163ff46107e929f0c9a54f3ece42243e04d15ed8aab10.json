{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchProjects } from '../actions/projectActions';\nconst projectsSlice = createSlice({\n  name: 'projects',\n  initialState: [],\n  reducers: {\n    setProjects: (state, action) => action.payload,\n    addProject: (state, action) => {\n      state.push(action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProjects.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n});\nexport const {\n  setProjects,\n  addProject\n} = projectsSlice.actions;\nexport default projectsSlice.reducer;","map":{"version":3,"names":["createSlice","fetchProjects","projectsSlice","name","initialState","reducers","setProjects","state","action","payload","addProject","push","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["/Users/antonioruggiero/my-portfolio/src/reducers/projectReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { fetchProjects } from '../actions/projectActions';\n\nconst projectsSlice = createSlice({\n  name: 'projects',\n  initialState: [],\n  reducers: {\n    setProjects: (state, action) => action.payload,\n    addProject: (state, action) => {\n      state.push(action.payload);\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProjects.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  },\n});\n\nexport const { setProjects, addProject } = projectsSlice.actions;\n\nexport default projectsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,2BAA2B;AAEzD,MAAMC,aAAa,GAAGF,WAAW,CAAC;EAChCG,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAKA,MAAM,CAACC,OAAO;IAC9CC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACI,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IAC5B;EACF,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACb,aAAa,CAACc,SAAS,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC1D,OAAOA,MAAM,CAACC,OAAO;IACvB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,WAAW;EAAEI;AAAW,CAAC,GAAGR,aAAa,CAACc,OAAO;AAEhE,eAAed,aAAa,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}